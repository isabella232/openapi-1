openapi: 3.0.0
info:
  title: ZEIT API
  version: v2019-01-07
  x-providerName: zeit.co
  x-logo:
    url: https://logo-core.clearbit.com/zeit.co
externalDocs:
  url: https://zeit.co/docs/api/
servers:
  - url: https://api.zeit.co
tags:
  - name: domains
    description: Manage custom domains to use with ZEIT
  - name: webhooks
    description: Manage webhooks where you can receive ZEIT events
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    oauthAuthentication:
      type: oauth2
      description: This API uses OAuth 2 with the authorizationCode flow
      flows:
        authorizationCode:
          authorizationUrl: https://zeit.co/oauth/authorize
          tokenUrl: https://api.zeit.co/v2/oauth/access_token
          scopes: {}
  parameters:
    teamId:
      name: teamId
      in: query
      description: A team id in case you want to act on behalf of a team
      required: false
      schema:
        type: string
  requestBodies:
    alias:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/event"
              - type: object
                required:
                  - type
                  - payload
                properties:
                  type:
                    type: string
                    enum: ["alias"]
                  payload:
                    type: object
                    required:
                      - alias
                    properties:
                      alias:
                        type: string
                      aliasId:
                        type: string
                      deployment:
                        $ref: "#/components/schemas/deployment"
                      deploymentId:
                        type: string
                      deploymentUrl:
                        type: string
                      oldDeploymentId:
                        type: string
                      ruleCount:
                        type: integer
    domain:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/event"
              - type: object
                required:
                  - type
                  - payload
                properties:
                  type:
                    type: string
                    enum: ["domain"]
                  payload:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                      zoneId:
                        type: number
                      domainId:
                        type: string
    domainVerify:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/event"
              - type: object
                required:
                  - type
                  - payload
                properties:
                  type:
                    type: string
                    enum: ["domain-verify"]
                  payload:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                      domainId:
                        type: string
    domainDelete:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/event"
              - type: object
                required:
                  - type
                  - payload
                properties:
                  type:
                    type: string
                    enum: ["domain-delete"]
                  payload:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                      domainId:
                        type: string
    deployment:
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/event"
              - type: object
                required:
                  - type
                  - payload
                properties:
                  type:
                    type: string
                    enum: ["deployment"]
                  payload:
                    type: object
                    required:
                      - name
                      - string
                    properties:
                      deployment:
                        $ref: "#/components/schemas/deployment"
                      deploymentId:
                        type: string
                      name:
                        type: string
                      plan:
                        type: string
                      project:
                        type: string
                      regions:
                        type: array
                        items:
                          type: string
                      scale:
                        type: object
                        properties:
                          sfo1:
                            type: object
                            nullable: true
                            properties:
                              minInstances:
                                type: integer
                              maxInstances:
                                type: integer
                          bru1:
                            type: object
                            nullable: true
                            properties:
                              minInstances:
                                type: integer
                              maxInstances:
                                type: integer
                          iad1:
                            type: object
                            nullable: true
                            properties:
                              minInstances:
                                type: integer
                              maxInstances:
                                type: integer
                      type:
                        type: string
                        enum: [NPM, STATIC, DOCKER, LAMBDA]
                      url:
                        type: string
  schemas:
    event:
      required:
        - created
        - id
        - ownerId
        - type
        - userId
      properties:
        created:
          type: integer
        createdAt:
          type: integer
        id:
          type: string
        ownerId:
          type: string
        region:
          type: string
        teamId:
          type: string
        userId:
          type: string
    deployment:
      required:
        - id
        - name
        - url
        - meta
      properties:
        id:
          description: Unique identifier of the deployment
          type: string
        name:
          type: string
        url:
          type: string
        meta:
          type: object
          properties:
            BK_JOB_ID:
              type: string
            BUILD_NUMBER:
              type: string
            CIRCLE_BUILD_URL:
              type: string
            CIRCLE_COMPARE_URL:
              type: string
            COMMIT:
              type: string
            created-by:
              type: string
            created_by:
              type: string
            deploymentPrefix:
              type: string
            GITHUB_SHA:
              type: string
            githubCommitAuthorLogin:
              type: string
            githubCommitAuthorName:
              type: string
            githubCommitMessage:
              type: string
            githubCommitOrg:
              type: string
            githubCommitRef:
              type: string
            githubCommitRepo:
              type: string
            githubCommitSha:
              type: string
            githubDeployment:
              type: string
            githubDeploymentAuthorizedBy:
              type: string
            githubOrg:
              type: string
            githubPrId:
              type: string
            githubRepo:
              type: string
            gitlabCommitAuthorAvatar:
              type: string
            gitlabCommitAuthorLogin:
              type: string
            gitlabCommitAuthorName:
              type: string
            gitlabCommitMessage:
              type: string
            gitlabCommitRef:
              type: string
            gitlabCommitSha:
              type: string
            gitlabDeployment:
              type: string
            gitlabProjectId:
              type: string
            gitlabProjectName:
              type: string
            gitlabProjectNamespace:
              type: string
            gitlabProjectPath:
              type: string
            gitSha:
              type: string
            gl:
              type: string
            targetDomain:
              type: string
            TRAVIS_BUILD_WEB_URL:
              type: string
            useOldPipeline:
              type: string
    webhook:
      description: A webhook subscription with an URL where ZEIT will POST events.
      required:
        - id
        - url
        - name
        - events
        - onwerId
        - createdAt
        - configurationId
      properties:
        id:
          description: Id of the webhook
          type: string
        events:
          description: An array with the event identifiers that the webhook can receive
          type: array
          items:
            type: string
        url:
          description: The URL where the POST request will be sent
          type: string
        name:
          description: A name for the webhook that serves as a canonical description
          type: string
        configurationId:
          description: An id that corresponds to the configuration that generated the token that was used to create the webhook
          type: string
        createdAt:
          description: Timestamp that tells when was the webhook created
          type: integer
        ownerId:
          description: Id of the owner which can be a user or a team
          type: string
security:
  - bearerAuth: []
paths:
  /v1/integrations/webhooks:
    get:
      operationId: getWebhooks
      summary: Get a list of existent webhooks
      tags: ["webhooks"]
      parameters:
        - $ref: "#/components/parameters/teamId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                description: An Array of webhooks for the given account
                type: array
                items:
                  $ref: "#/components/schemas/webhook"
    post:
      operationId: createWebhook
      summary: Create a new webhook
      tags: ["webhooks"]
      parameters:
        - $ref: "#/components/parameters/teamId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - url
              properties:
                name:
                  description: A name to assign to the webhook
                  type: string
                url:
                  description: The URL ZEIT will post to when events happen
                  type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/webhook"
      callbacks:
        alias:
          "{$request.body#/url}":
            post:
              requestBody:
                $ref: "#/components/requestBodies/alias"
              responses:
                "200":
                  description: OK
        deployment:
          "{#request.body#/url}":
            post:
              requestBody:
                $ref: "#/components/requestBodies/deployment"
              responses:
                "200":
                  description: OK
        domain:
          "{$request.body#/url}":
            post:
              requestBody:
                $ref: "#/components/requestBodies/domain"
              responses:
                "200":
                  description: OK
        domainVerify:
          "{$request.body#/url}":
            post:
              requestBody:
                $ref: "#/components/requestBodies/domainVerify"
              responses:
                "200":
                  description: OK
        domainDelete:
          "{$request.body#/url}":
            post:
              requestBody:
                $ref: "#/components/requestBodies/domainDelete"
              responses:
                "200":
                  description: OK
  /v1/integrations/webhooks/:id:
    delete:
      operationId: deleteWebhooks
      summary: Remove a webhook by id
      tags: ["webhooks"]
      parameters:
        - $ref: "#/components/parameters/teamId"
      responses:
        "204":
          description: OK
  /v4/domains:
    get:
      operationId: listDomains
      summary: Gets a list of domains registered for the authenticating user.
      tags: ["domains"]
      parameters:
        - $ref: "#/components/parameters/teamId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                required: [domains]
                example:
                  domains:
                    - id: Qmf2RSrNz5sqt6nznp4JpAyXgT6pY65qwJJn8gESt2iKoi
                      name: zeit.rocks
                      cdnEnabled: false
                      createdAt: 1549492062697
                      boughtAt: 1549492066000
                      expiresAt: 1581033599000
                      nsVerifiedAt: 1549492417256
                      orderedAt: 1549492057859
                      serviceType: zeit.world
                      txtVerifiedAt: null
                      verified: true
                      nameservers:
                        - f.zeit-world.net
                        - e.zeit-world.com
                        - b.zeit-world.co.uk
                        - c.zeit-world.org
                      intendedNameservers:
                        - b.zeit-world.co.uk
                        - c.zeit-world.org
                        - e.zeit-world.com
                        - f.zeit-world.net
                      verificationRecord: QmReErtvkKUkogSYEAFJCQVPboxRcrCygaFG8xUKinurD4
                properties:
                  domains:
                    description: "An Array of domains for the given account"
                    type: array
                    items:
                      type: object
                      required:
                        - boughtAt
                        - cdnEnabled
                        - createdAt
                        - expiresAt
                        - id
                        - intendedNameservers
                        - name
                        - nameservers
                        - nsVerifiedAt
                        - serviceType
                        - txtVerifiedAt
                        - verificationRecord
                        - verified
                      properties:
                        boughtAt:
                          nullable: true
                          description: A timestamp to tell when the domain was purchase if it was purchased with ZEIT
                          type: integer
                        cdnEnabled:
                          description: Wether the Cloudfare CDN is enabled for the domain or not
                          type: boolean
                        createdAt:
                          description: A timestamp that shows when the domain was created
                          nullable: true
                          type: integer
                        expiresAt:
                          description: The expiration date for the domain in case it's in ZEIT
                          nullable: true
                          type: integer
                        id:
                          description: The unique identifier of the domain.
                          type: string
                        intendedNameservers:
                          description: The set of nameservers ZEIT requires the user to set to verify the domain with Nameservers
                          type: array
                          items:
                            description: An intended nameserver for the domain
                            type: string
                        name:
                          description: The domain name including the TLD
                          type: string
                        nameservers:
                          description: The current nameservers we have detected for the domain
                          type: array
                          items:
                            description: A nameserver the domain has set
                            type: string
                        nsVerifiedAt:
                          description: The timestamp of the last time the domain was verified using Nameservers
                          nullable: true
                          type: integer
                        orderedAt:
                          description: A timestamp indicating when the domain was ordered if it was purchased with ZEIT
                          nullable: true
                          type: integer
                        serviceType:
                          description: Indicates the current DNS service the domain is using
                          type: string
                          enum:
                            - zeit.world
                            - external
                            - na
                        transferredAt:
                          description: If the domain was transferred to ZEIT, it indicates the timestamp for when the transfer was started
                          nullable: true
                          type: integer
                        txtVerifiedAt:
                          description: The timestamp of the last time the domain was verified using a TXT record
                          nullable: true
                          type: integer
                        verificationRecord:
                          description: Indicates the verification record that should be used to verify the domain using a TXT record
                          type: string
                        verified:
                          description: Indicates if the domain ownership was already verified
                          type: boolean
